const TRUE = 1
const FALSE = 0
range Boolean = FALSE..TRUE
const MAX = 6
range N = 0..MAX
range CONNECTIONS = 0..5

Node(ID=0,NConnections=0,Sleep=0,A=-1,B=-1,C=-1,D=-1,E=-1) = Node[Sleep][0],
Node[isSleeping:Boolean][count:CONNECTIONS] = 
(
	 when(count < NConnections && isSleeping == FALSE && A != -1) sendWakeupTo.node[A] -> node[A].wakeup -> Node[isSleeping][count+1]
	| when(count < NConnections && isSleeping == FALSE && B != -1) sendWakeupTo.node[B] -> node[B].wakeup -> Node[isSleeping][count+1]
	| when(count < NConnections && isSleeping == FALSE && C != -1) sendWakeupTo.node[C] -> node[C].wakeup -> Node[isSleeping][count+1]
	| when(count < NConnections && isSleeping == FALSE && D != -1) sendWakeupTo.node[D] -> node[D].wakeup -> Node[isSleeping][count+1]
	| when(count < NConnections && isSleeping == FALSE && E != -1) sendWakeupTo.node[E] -> node[E].wakeup -> Node[isSleeping][count+1]
	| when(isSleeping == TRUE) wakeup -> Node[FALSE][count]
	| when(isSleeping == FALSE ) echo -> Node[TRUE][count]
).

||Nodes = ( node[0]:Node(0,2,FALSE,1,2,-1,-1,-1) 
			|| node[1]:Node(1,2,TRUE,3,4,-1,-1,-1) 
			|| node[2]:Node(2,2,TRUE,5,6,-1,-1,-1)
			|| node[3]:Node(3,0,TRUE,-1,-1,-1,-1,-1)
			|| node[4]:Node(4,0,TRUE,-1,-1,-1,-1,-1)
			|| node[5]:Node(5,0,TRUE,-1,-1,-1,-1,-1)
			|| node[6]:Node(6,0,TRUE,-1,-1,-1,-1,-1))
			/{node[i:N].wakeup/node[N].node[i].wakeup}.


/*SLAVE = (start->rotate->join->SLAVE).

MASTER = (slave.start->rotate->slave.join->rotate->MASTER).

||MASTER_SLAVE = (MASTER || slave:SLAVE).*/

/*
Node merkt sich seine ID
Node hat Maximal fünf Kindervariablen
Mit Relabelling arbeiten 
*/
